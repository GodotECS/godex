name: üêß Linux Builds

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

# Global Settings
env:
  GODOT_REF: ab7cb2a95d060a6533e6ff5111c11f71972ab43f
  SCONSFLAGS: platform=linuxbsd verbose=yes warnings=extra werror=yes debug_symbols=no module_text_server_fb_enabled=yes
  SCONS_CACHE_LIMIT: 4096

jobs:
  linux-editor:
    runs-on: "ubuntu-20.04"
    name: Editor (target=editor, tools=yes, tests=yes)

    steps:
    - name: Wait for static checks
      uses: lewagon/wait-on-check-action@v1.3.1
      with:
       ref: ${{ github.event_name != 'pull_request' && github.sha || github.event.pull_request.head.sha }}
       check-name: 'Static Checks (clang-format, black format, file format, documentation checks)'
       repo-token: ${{ secrets.GITHUB_TOKEN }}
       wait-interval: 10
    - name: Make godot dir
      run: |
       mkdir godot
       mkdir modules
       mkdir modules/godex

    - name: Clone godex
      uses: actions/checkout@v2
      with:
       path: modules/godex

    - name: Clone godot for godex
      uses: actions/checkout@v2
      with:
       repository: godotengine/godot
       ref: ${{ env.GODOT_REF }}
       path: godot

    - name: Apply patch
      run: |
        cd godot
        git apply ../modules/godex/patches/add_custom_iterator.patch --reject --ignore-space-change --ignore-whitespace

    # Azure repositories are not reliable, we need to prevent azure giving us packages.
    - name: Make apt sources.list use the default Ubuntu repositories
      run: |
       sudo rm -f /etc/apt/sources.list.d/*
       sudo cp -f modules/godex/misc/ci/sources.list /etc/apt/sources.list
       sudo apt-get update

    # Install all packages (except scons)
    - name: Configure dependencies
      run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm

    # Upload cache on completion and check it out now
    - name: Load .scons_cache directory
      id: linux-editor-cache
      uses: actions/cache@v2
      with:
       path: ${{github.workspace}}/.scons_cache/
       key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-{{env.GODOT_REF}}-${{github.ref}}-${{github.sha}}
       restore-keys: |
        ${{github.job}}-{{env.GODOT_REF}}-${{github.ref}}-${{github.sha}}
        ${{github.job}}-{{env.GODOT_REF}}-${{github.ref}}
        ${{github.job}}-{{env.GODOT_REF}}

    # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
       # Semantic version range syntax or exact version of a Python version
       python-version: '3.x'
       # Optional - x64 or x86 architecture, defaults to x64
       architecture: 'x64'

    # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
    - name: Configuring Python packages
      run: |
       python -c "import sys; print(sys.version)"
       python -m pip install scons
       python --version
       scons --version

    - name: Compilation
      env:
        SCONS_CACHE: ${{github.workspace}}/.scons_cache/
      run: |
       cd godot
       scons tools=yes tests=yes target=editor custom_modules="../modules"
       ls -l bin/

    # Execute unit tests for the editor
    - name: Unit Tests
      run: |
        cd ./godot
        ./bin/godot.linuxbsd.editor.x86_64 --test --headless
        cd ../

    - uses: actions/upload-artifact@v2
      with:
       name: ${{ github.job }}
       path: godot/bin/*
       retention-days: 14

